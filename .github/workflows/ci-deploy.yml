name: CI & Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: npm install --prefix frontend

      - name: Build frontend
        run: npm run build --prefix frontend

  deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload project to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./"
          target: "/opt/rim-auto"
          overwrite: true

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        env:
          VITE_TELEGRAM_BOT_USERNAME: ${{ secrets.VITE_TELEGRAM_BOT_USERNAME }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          command_timeout: 40m
          envs: VITE_TELEGRAM_BOT_USERNAME
          envs_format: export {{ .Name }}="{{ .Value }}"
          script: |
            set -e
            cd /opt/rim-auto
            mkdir -p letsencrypt
            # Persist env for docker compose substitutions
            echo "VITE_TELEGRAM_BOT_USERNAME=${VITE_TELEGRAM_BOT_USERNAME}" > .env
            export DOCKER_BUILDKIT=1
            docker compose --progress=plain -f docker-compose.prod.yml build --pull backend frontend
            docker compose -f docker-compose.prod.yml up -d mongo
            docker compose -f docker-compose.prod.yml up -d selenium
            docker compose -f docker-compose.prod.yml up -d backend
            docker compose -f docker-compose.prod.yml up -d frontend
            docker system prune -f || true
            docker compose -f docker-compose.prod.yml ps


