/**
 * –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–ª–∞–¥–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 * –ü—Ä–æ—Å—Ç–∞—è –æ—Ç–ª–∞–¥–∫–∞ —Å Telegram Debug Mode
 */

import { useState, useEffect } from 'react';
import { useTelegramAuth } from '../../features/auth';
import { Button } from '../../shared/ui';
import { enableDebugMode, disableDebugMode } from '../../shared/lib/platform/telegram';
import { getItemSync, removeItemSync } from '../../shared/lib/storage.js';

export const AuthDebugPage = () => {
  const {
    isAuthenticated,
    user,
    telegramUser,
    isLoading,
    isTelegramWebApp,
    userName
  } = useTelegramAuth();

  const [telegramDebugMode, setTelegramDebugMode] = useState(
    typeof window !== 'undefined' && Boolean(getItemSync('telegram_debug_mode'))
  );

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–∞–Ω–µ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
  const [showDevPanel, setShowDevPanel] = useState(false);
  const [health, setHealth] = useState(null);
  const [imageStats, setImageStats] = useState(null);
  const [loadingImageStats, setLoadingImageStats] = useState(false);
  const [cacheRefreshProgress, setCacheRefreshProgress] = useState(null);
  const [debugInfo, setDebugInfo] = useState(null);
  const [customSelector, setCustomSelector] = useState('');
  const [customSelectorResult, setCustomSelectorResult] = useState(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã
  const loadHealth = async () => {
    try {
      const response = await fetch('/api/health');
      if (response.ok) {
        const data = await response.json();
        setHealth(data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã:', error);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const loadImageStats = async () => {
    setLoadingImageStats(true);
    try {
      const response = await fetch('/api/admin/image-stats');
      if (response.ok) {
        const data = await response.json();
        setImageStats(data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error);
    } finally {
      setLoadingImageStats(false);
    }
  };

  // –û—á–∏—Å—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const handleCleanupImages = async () => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è?')) return;
    
    try {
      const response = await fetch('/api/admin/cleanup-images', { method: 'POST' });
      if (response.ok) {
        alert('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã');
        loadImageStats();
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error);
      alert('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    }
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞
  const handleRefreshCache = async () => {
    if (!confirm('–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 5 –º–∏–Ω—É—Ç. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) return;
    
    setCacheRefreshProgress({ status: 'starting', message: '–ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞...' });
    
    try {
      const response = await fetch('/api/admin/refresh-cache', { method: 'POST' });
      if (response.ok) {
        setCacheRefreshProgress({ status: 'success', message: '–ö—ç—à —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω' });
        setTimeout(() => setCacheRefreshProgress(null), 5000);
      } else {
        setCacheRefreshProgress({ status: 'error', message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞' });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞:', error);
      setCacheRefreshProgress({ status: 'error', message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞' });
    }
  };

  // –û—Ç–º–µ–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞
  const handleCancelRefresh = async () => {
    try {
      await fetch('/api/admin/cancel-refresh', { method: 'POST' });
      setCacheRefreshProgress({ status: 'cancelled', message: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ' });
      setTimeout(() => setCacheRefreshProgress(null), 3000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
    }
  };

  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
  const handleTestSelectors = async () => {
    try {
      const response = await fetch('/api/admin/test-selectors');
      if (response.ok) {
        const data = await response.json();
        setDebugInfo(data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤:', error);
      alert('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤');
    }
  };

  // –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const handleViewPageSource = async () => {
    try {
      const response = await fetch('/api/admin/page-source');
      if (response.ok) {
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'page-source.html';
        a.click();
        window.URL.revokeObjectURL(url);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞:', error);
      alert('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞');
    }
  };

  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
  const handleTestCustomSelector = async () => {
    if (!customSelector.trim()) return;
    
    try {
      const response = await fetch('/api/admin/test-custom-selector', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ selector: customSelector })
      });
      if (response.ok) {
        const data = await response.json();
        setCustomSelectorResult(data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞');
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–∞–Ω–µ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
  useEffect(() => {
    if (showDevPanel) {
      loadHealth();
      loadImageStats();
    }
  }, [showDevPanel]);

  const toggleTelegramDebug = () => {
    if (telegramDebugMode) {
      disableDebugMode();
      setTelegramDebugMode(false);
      alert('Telegram Debug Mode –≤—ã–∫–ª—é—á–µ–Ω.\n–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.');
    } else {
      enableDebugMode();
      setTelegramDebugMode(true);
      alert('Telegram Debug Mode –≤–∫–ª—é—á–µ–Ω.\n–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.');
    }
  };

  const reloadPage = () => {
    window.location.reload();
  };

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-3xl font-bold mb-8 text-text-primary dark:text-dark-text-primary">
          üîß –û—Ç–ª–∞–¥–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        </h1>

        {/* –°—Ç–∞—Ç—É—Å */}
        <div className="bg-surface dark:bg-dark-surface rounded-lg p-6 mb-6 border border-border dark:border-dark-border">
          <h2 className="text-xl font-semibold mb-4 text-text-primary dark:text-dark-text-primary">
            –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
          </h2>
          
          <div className="grid grid-cols-2 gap-4 text-sm">
            <div>
              <span className="font-medium text-text-secondary dark:text-dark-text-secondary">–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:</span>
              <p className={`font-bold ${isAuthenticated ? 'text-green-600' : 'text-red-600'}`}>
                {isAuthenticated ? '–î–∞' : '–ù–µ—Ç'}
              </p>
            </div>
            
            <div>
              <span className="font-medium text-text-secondary dark:text-dark-text-secondary">Telegram WebApp (—Å–∏–º—É–ª—è—Ü–∏—è –≤ debug):</span>
              <p className={`font-bold ${isTelegramWebApp ? 'text-blue-600' : 'text-gray-600'}`}>
                {isTelegramWebApp ? '–î–∞' : '–ù–µ—Ç'}
              </p>
            </div>
            
            <div>
              <span className="font-medium text-text-secondary dark:text-dark-text-secondary">Telegram Debug:</span>
              <p className={`font-bold ${telegramDebugMode ? 'text-orange-600' : 'text-gray-600'}`}>
                {telegramDebugMode ? '–í–∫–ª—é—á–µ–Ω' : '–í—ã–∫–ª—é—á–µ–Ω'}
              </p>
            </div>
            
            <div>
              <span className="font-medium text-text-secondary dark:text-dark-text-secondary">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</span>
              <p className="font-bold text-text-primary dark:text-dark-text-primary">
                {userName || '–ù–µ –Ω–∞–π–¥–µ–Ω'}
              </p>
            </div>
          </div>
          
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          {telegramDebugMode && (
            <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
              <p className="text-sm text-blue-700 dark:text-blue-300">
                <strong>Debug —Ä–µ–∂–∏–º:</strong> –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ Telegram (initData, user). –¢–æ–∫–µ–Ω –≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞–µ–º —Å backend.
              </p>
            </div>
          )}

          {/* –¢–æ–∫–µ–Ω */}
          {isAuthenticated && (
            <div className="mt-4 p-3 bg-surface-secondary dark:bg-dark-surface-secondary rounded-lg border border-border dark:border-dark-border">
              <details>
                <summary className="text-xs text-text-secondary dark:text-dark-text-secondary cursor-pointer">
                  –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω
                </summary>
                <div className="mt-2 p-2 bg-gray-100 dark:bg-gray-800 rounded text-xs font-mono break-all">
                  {getItemSync('authToken') || '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω'}
                </div>
              </details>
            </div>
          )}
        </div>

        {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
        <div className="bg-surface dark:bg-dark-surface rounded-lg p-6 mb-6 border border-border dark:border-dark-border">
          <h2 className="text-xl font-semibold mb-4 text-text-primary dark:text-dark-text-primary">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
          </h2>
          
          <div className="flex gap-4">
            <Button 
              onClick={toggleTelegramDebug} 
              variant={telegramDebugMode ? "outline" : "primary"}
            >
              {telegramDebugMode ? '–í—ã–∫–ª—é—á–∏—Ç—å Telegram Debug' : '–í–∫–ª—é—á–∏—Ç—å Telegram Debug'}
            </Button>
            
            {telegramDebugMode !== Boolean(getItemSync('telegram_debug_mode')) && (
              <Button onClick={reloadPage} variant="outline">
                –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
              </Button>
            )}
            
            <Button 
              onClick={() => {
                removeItemSync('authToken');
                removeItemSync('telegramInitData');
                window.location.reload();
              }} 
              variant="outline"
              className="text-red-600 hover:text-red-700"
            >
              –û—á–∏—Å—Ç–∏—Ç—å —Ç–æ–∫–µ–Ω—ã
            </Button>
          </div>
        </div>

        {/* –ü–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ */}
        <div className="bg-surface dark:bg-dark-surface rounded-lg p-6 mb-6 border border-border dark:border-dark-border">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-xl font-semibold text-text-primary dark:text-dark-text-primary">
              –ü–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
            </h2>
            <button
              onClick={() => setShowDevPanel(!showDevPanel)}
              className="text-sm text-text-secondary dark:text-dark-text-secondary hover:text-primary-600 transition-colors"
            >
              {showDevPanel ? 'üîΩ –°–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞' : 'üîß –ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞'}
            </button>
          </div>
          
          {showDevPanel && (
            <div className="space-y-4">
              {/* –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã */}
              {health && (
                <div className="p-4 bg-green-50 dark:bg-green-900 rounded-lg">
                  <h3 className="font-semibold text-green-800 dark:text-green-200 mb-2">–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:</h3>
                  <div className="text-sm text-green-700 dark:text-green-300">
                    <p>MongoDB: {health.services?.mongodb || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
                    <p>Selenium: {health.services?.selenium || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
                  </div>
                </div>
              )}

              {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
              {imageStats && (
                <div className="p-4 bg-blue-50 dark:bg-blue-900 rounded-lg">
                  <div className="flex justify-between items-start">
                    <div>
                      <h3 className="font-semibold text-blue-800 dark:text-blue-200 mb-2">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:</h3>
                      <div className="text-sm text-blue-700 dark:text-blue-300">
                        <p>–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {imageStats.total_images}</p>
                        <p>–†–∞–∑–º–µ—Ä: {imageStats.total_size_mb} MB</p>
                        <p>–°—Ç–∞—Ç—É—Å: {imageStats.status}</p>
                      </div>
                    </div>
                    <div className="flex gap-2">
                      <button
                        onClick={loadImageStats}
                        disabled={loadingImageStats}
                        className="px-3 py-1 text-xs bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors disabled:opacity-50"
                      >
                        {loadingImageStats ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–û–±–Ω–æ–≤–∏—Ç—å'}
                      </button>
                      <button
                        onClick={handleCleanupImages}
                        className="px-3 py-1 text-xs bg-red-600 hover:bg-red-700 text-white rounded transition-colors"
                      >
                        –û—á–∏—Å—Ç–∏—Ç—å
                      </button>
                    </div>
                  </div>
                </div>
              )}

              {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—ç—à–µ–º */}
              <div className="p-4 bg-yellow-50 dark:bg-yellow-900 rounded-lg">
                <div className="flex justify-between items-center">
                  <div>
                    <h3 className="font-semibold text-yellow-800 dark:text-yellow-200">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏:</h3>
                    <p className="text-sm text-yellow-700 dark:text-yellow-300 mt-1">
                      –ü–µ—Ä–µ–ø–∞—Ä—Å–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏ —Å–∫–∞—á–∞—Ç—å –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    </p>
                    {cacheRefreshProgress && (
                      <div className="mt-2">
                        <div className={`text-sm font-medium ${
                          cacheRefreshProgress.status === 'error' 
                            ? 'text-red-600 dark:text-red-400' 
                            : cacheRefreshProgress.status === 'success'
                            ? 'text-green-600 dark:text-green-400'
                            : cacheRefreshProgress.status === 'cancelled'
                            ? 'text-gray-600 dark:text-gray-400'
                            : 'text-blue-600 dark:text-blue-400'
                        }`}>
                          {cacheRefreshProgress.message}
                        </div>
                        {cacheRefreshProgress.status === 'starting' && (
                          <div className="mt-2">
                            <div className="w-full bg-yellow-200 dark:bg-yellow-700 rounded-full h-2">
                              <div className="bg-yellow-600 dark:bg-yellow-400 h-2 rounded-full animate-pulse"></div>
                            </div>
                            <p className="text-xs text-yellow-600 dark:text-yellow-400 mt-1">
                              –û–ø–µ—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 5 –º–∏–Ω—É—Ç...
                            </p>
                            <button
                              onClick={handleCancelRefresh}
                              className="mt-2 px-3 py-1 text-xs bg-red-600 hover:bg-red-700 text-white rounded transition-colors"
                            >
                              –û—Ç–º–µ–Ω–∏—Ç—å
                            </button>
                          </div>
                        )}
                      </div>
                    )}
                  </div>
                  <button
                    onClick={handleRefreshCache}
                    disabled={isLoading || cacheRefreshProgress?.status === 'starting'}
                    className="px-4 py-2 bg-yellow-600 hover:bg-yellow-700 text-white rounded transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    {cacheRefreshProgress?.status === 'starting' ? '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...' : '–û–±–Ω–æ–≤–∏—Ç—å –∫—ç—à'}
                  </button>
                </div>
              </div>

              {/* –û—Ç–ª–∞–¥–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ */}
              <div className="p-4 bg-purple-50 dark:bg-purple-900 rounded-lg">
                <div className="flex justify-between items-start">
                  <div>
                    <h3 className="font-semibold text-purple-800 dark:text-purple-200 mb-2">–û—Ç–ª–∞–¥–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:</h3>
                    <p className="text-sm text-purple-700 dark:text-purple-300 mb-3">
                      –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º che168.com
                    </p>
                  </div>
                  <div className="flex gap-2">
                    <button
                      onClick={handleTestSelectors}
                      className="px-3 py-1 text-xs bg-purple-600 hover:bg-purple-700 text-white rounded transition-colors"
                    >
                      –¢–µ—Å—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
                    </button>
                    <button
                      onClick={handleViewPageSource}
                      className="px-3 py-1 text-xs bg-purple-600 hover:bg-purple-700 text-white rounded transition-colors"
                    >
                      –ü—Ä–æ—Å–º–æ—Ç—Ä HTML
                    </button>
                  </div>
                </div>
                
                {/* –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ */}
                <div className="mt-4 p-3 bg-purple-50 dark:bg-purple-900 rounded">
                  <h5 className="font-medium text-purple-800 dark:text-purple-200 mb-2">–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞:</h5>
                  <div className="flex gap-2 mb-3">
                    <input
                      type="text"
                      value={customSelector}
                      onChange={(e) => setCustomSelector(e.target.value)}
                      placeholder="–í–≤–µ–¥–∏—Ç–µ CSS —Å–µ–ª–µ–∫—Ç–æ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä: li.cxc-card)"
                      className="flex-1 px-3 py-1 text-sm border border-purple-300 dark:border-purple-600 rounded bg-white dark:bg-purple-800 text-purple-900 dark:text-purple-100"
                    />
                    <button
                      onClick={handleTestCustomSelector}
                      disabled={!customSelector.trim()}
                      className="px-3 py-1 text-xs bg-purple-600 hover:bg-purple-700 text-white rounded transition-colors disabled:opacity-50"
                    >
                      –¢–µ—Å—Ç
                    </button>
                  </div>
                  
                  {/* –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ */}
                  {customSelectorResult && (
                    <div className="mt-3 p-2 bg-purple-200 dark:bg-purple-700 rounded">
                      <h6 className="font-medium text-purple-800 dark:text-purple-200 mb-1">
                        –†–µ–∑—É–ª—å—Ç–∞—Ç: {customSelectorResult.selector}
                      </h6>
                      <div className="text-xs space-y-1">
                        <p><strong>–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:</strong> {customSelectorResult.analysis.count}</p>
                        {customSelectorResult.analysis.count > 0 && (
                          <>
                            <p><strong>ID –æ–±—Ä–∞–∑—Ü–æ–≤:</strong> {customSelectorResult.analysis.sample_ids.slice(0, 3).join(', ')}</p>
                            <p><strong>–ö–ª–∞—Å—Å—ã –æ–±—Ä–∞–∑—Ü–æ–≤:</strong></p>
                            <div className="max-h-20 overflow-y-auto">
                              {customSelectorResult.analysis.sample_classes.slice(0, 3).map((classes, idx) => (
                                <div key={idx} className="text-xs bg-purple-300 dark:bg-purple-600 px-1 rounded mb-1">
                                  {classes.join(', ')}
                                </div>
                              ))}
                            </div>
                            <p><strong>–¢–µ–∫—Å—Ç –æ–±—Ä–∞–∑—Ü–æ–≤:</strong></p>
                            <div className="max-h-20 overflow-y-auto">
                              {customSelectorResult.analysis.sample_text.slice(0, 3).map((text, idx) => (
                                <div key={idx} className="text-xs bg-purple-300 dark:bg-purple-600 px-1 rounded mb-1">
                                  {text.substring(0, 100)}...
                                </div>
                              ))}
                            </div>
                          </>
                        )}
                      </div>
                    </div>
                  )}
                </div>
                
                {debugInfo && (
                  <div className="mt-4 p-3 bg-purple-100 dark:bg-purple-800 rounded">
                    <h4 className="font-medium text-purple-800 dark:text-purple-200 mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h4>
                    <div className="text-sm text-purple-700 dark:text-purple-300">
                      <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {debugInfo.status}</p>
                      
                      {/* –ê–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–æ—á–µ–∫ */}
                      {debugInfo.card_analysis && (
                        <div className="mt-3 p-2 bg-purple-200 dark:bg-purple-700 rounded">
                          <h5 className="font-medium text-purple-800 dark:text-purple-200 mb-1">–ê–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–æ—á–µ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π:</h5>
                          <div className="text-xs space-y-1">
                            <p><strong>–ù–∞–π–¥–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫:</strong> {debugInfo.card_analysis.total_cards}</p>
                            <p><strong>ID –æ–±—Ä–∞–∑—Ü–∞:</strong> {debugInfo.card_analysis.sample_id}</p>
                            <p><strong>–ö–ª–∞—Å—Å—ã –æ–±—Ä–∞–∑—Ü–∞:</strong> {debugInfo.card_analysis.sample_classes?.join(', ')}</p>
                            <p><strong>–°–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É:</strong> {debugInfo.card_analysis.has_link ? '‚úÖ' : '‚ùå'}</p>
                            <p><strong>–°–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</strong> {debugInfo.card_analysis.has_image ? '‚úÖ' : '‚ùå'}</p>
                            <p><strong>–°–æ–¥–µ—Ä–∂–∏—Ç —Ü–µ–Ω—É:</strong> {debugInfo.card_analysis.has_price ? '‚úÖ' : '‚ùå'}</p>
                          </div>
                        </div>
                      )}
                      
                      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤ */}
                      {debugInfo.selector_results && (
                        <div className="mt-3">
                          <p><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤:</strong></p>
                          <div className="max-h-40 overflow-y-auto space-y-1">
                            {Object.entries(debugInfo.selector_results).map(([selector, result]) => (
                              <div key={selector} className="flex items-center justify-between">
                                <code className="text-xs bg-purple-200 dark:bg-purple-700 px-1 rounded flex-1 mr-2">
                                  {selector}
                                </code>
                                <span className={`text-xs px-2 py-1 rounded ${
                                  result.count > 0 
                                    ? 'bg-green-200 dark:bg-green-700 text-green-800 dark:text-green-200' 
                                    : 'bg-red-200 dark:bg-red-700 text-red-800 dark:text-red-200'
                                }`}>
                                  {result.count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                                </span>
                              </div>
                            ))}
                          </div>
                        </div>
                      )}
                      
                      {/* –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∫–ª–∞—Å—Å—ã */}
                      {debugInfo.interesting_classes && debugInfo.interesting_classes.length > 0 && (
                        <div className="mt-3">
                          <p><strong>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∫–ª–∞—Å—Å—ã ({debugInfo.interesting_classes.length}):</strong></p>
                          <div className="text-xs max-h-20 overflow-y-auto">
                            {debugInfo.interesting_classes.slice(0, 15).join(', ')}
                            {debugInfo.interesting_classes.length > 15 && '...'}
                          </div>
                        </div>
                      )}
                      
                      {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                      <div className="mt-3 text-xs">
                        <p><strong>–í—Å–µ–≥–æ div/li —ç–ª–µ–º–µ–Ω—Ç–æ–≤:</strong> {debugInfo.total_divs}</p>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          )}
        </div>

        {/* –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        {(user || telegramUser) && (
          <div className="bg-surface dark:bg-dark-surface rounded-lg p-6 border border-border dark:border-dark-border">
            <h2 className="text-xl font-semibold mb-4 text-text-primary dark:text-dark-text-primary">
              –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            </h2>
            
            <div className="space-y-4">
              {user && (
                <div>
                  <h3 className="font-medium text-text-secondary dark:text-dark-text-secondary mb-2">
                    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–ë–î):
                  </h3>
                  <pre className="bg-gray-100 dark:bg-gray-800 p-3 rounded text-xs overflow-auto">
                    {JSON.stringify(user, null, 2)}
                  </pre>
                </div>
              )}
              
              {telegramUser && (
                <div>
                  <h3 className="font-medium text-text-secondary dark:text-dark-text-secondary mb-2">
                    Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
                  </h3>
                  <pre className="bg-gray-100 dark:bg-gray-800 p-3 rounded text-xs overflow-auto">
                    {JSON.stringify(telegramUser, null, 2)}
                  </pre>
                </div>
              )}
            </div>
          </div>
        )}
      </div>
    </div>
  );
}; 