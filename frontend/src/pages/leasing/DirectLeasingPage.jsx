import { useEffect, useMemo, useState } from 'react';
import { useForm } from 'react-hook-form';
import { useTelegramAuth } from '../../features/auth';
import { applicationsApi } from '../../shared/api/client';
import { useAltBottomNav } from '../../shared/lib/bottom-nav/context';
import { openPhoneDialer } from '../../shared/lib/platform';
import { useAppNavigation, routes } from '../../shared/lib/navigation';
import { DesktopContactBar } from '../../shared/ui';
import directLogo from '../../assets/leasing/leasing_direct.jpg';

const COMPANY_META = {
  name: '–î–∏—Ä–µ–∫—Ç –ª–∏–∑–∏–Ω–≥',
  logo: directLogo,
  phone: '+7 925 467-29-38',
  whatsAppUrl: 'https://wa.me/7 925 467-29-38',
  telegramUrl: 'https://t.me/7 925 467-29-38'
};

// –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é –ø–µ—Ä–µ–Ω–µ—Å–ª–∏ –≤ AlternateBottomNavigation

const DirectLeasingPage = () => {
  const { navigateTo } = useAppNavigation();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitSuccess, setSubmitSuccess] = useState(false);
  const [submitError, setSubmitError] = useState('');
  const { user } = useTelegramAuth();
  
  const {
    register,
    handleSubmit,
    formState: { errors },
    reset
  } = useForm();

  const altNavConfig = useMemo(() => ({
    chat: { label: '–ß–∞—Ç', telegramUrl: COMPANY_META.telegramUrl, whatsAppUrl: COMPANY_META.whatsAppUrl, phone: COMPANY_META.phone },
    call: { label: '–ó–≤–æ–Ω–æ–∫', onClick: () => { if (COMPANY_META.phone) openPhoneDialer(COMPANY_META.phone); }, phone: COMPANY_META.phone },
  }), []);

  const { activate, deactivate } = useAltBottomNav(altNavConfig);

  useEffect(() => {
    activate();
    return () => deactivate();
  }, [activate, deactivate]);

  const onSubmit = async (data) => {
    setIsSubmitting(true);
    setSubmitError('');
    try {
      const formData = new FormData();
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
      Object.keys(data).forEach(key => {
        if (data[key] !== undefined && data[key] !== '') {
          formData.append(key, data[key]);
        }
      });

      // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
      const fileInputs = document.querySelectorAll('input[type="file"]');
      fileInputs.forEach(input => {
        if (input.files && input.files.length > 0) {
          const fieldName = input.getAttribute('data-field-name') || input.name;
          Array.from(input.files).forEach((file) => {
            formData.append(`documents.${fieldName}`, file);
          });
        }
      });

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
      if (user) {
        formData.append('telegramUser', JSON.stringify({
          id: user.id,
          username: user.username,
          first_name: user.first_name,
          last_name: user.last_name,
        }));
      }

      formData.append('company', 'direct');

      // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:');
      for (let [key, value] of formData.entries()) {
        console.log(`   ${key}:`, value);
      }

      const response = await applicationsApi.submitDirectLeasingApplication(formData);
      console.log('Direct leasing application submitted:', response.data);
      setSubmitSuccess(true);
      reset();
      setTimeout(() => setSubmitSuccess(false), 5000);
    } catch (error) {
      console.error('Error submitting direct leasing application:', error);
      setSubmitError(error.response?.data?.detail || error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏');
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleFileChange = (e, fieldName) => {
    const file = e.target.files[0];
    if (file) {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—è
      e.target.setAttribute('data-field-name', fieldName);
      e.target.setAttribute('data-file-name', file.name);
    }
  };

  if (submitSuccess) {
    return (
      <div className="container section-padding">
        <div className="max-w-2xl mx-auto text-center">
          <div className="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-8">
            <div className="text-green-600 dark:text-green-400 text-6xl mb-4">‚úì</div>
            <h2 className="text-2xl font-bold text-text-primary dark:text-dark-text-primary mb-4">
              –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ {COMPANY_META.name}!
            </h2>
            <p className="text-text-secondary dark:text-dark-text-secondary">
              –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
            </p>
            {user && (
              <p className="text-sm text-green-600 dark:text-green-400 mt-2">–ó–∞—è–≤–∫–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –≤–∞—à–µ–º—É Telegram –∞–∫–∫–∞—É–Ω—Ç—É</p>
            )}
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="container section-padding">
      <div className="max-w-2xl mx-auto">
        <div className="mb-6">
          <button
            type="button"
            onClick={() => navigateTo(routes.leasing)}
            className="flex items-center justify-between gap-3 w-full mb-4 focus:outline-none underline-offset-4 hover:underline focus:underline"
            aria-label="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–æ–º–ø–∞–Ω–∏–π"
          >
            <img src={COMPANY_META.logo} alt={COMPANY_META.name} className="h-16 max-w-48 m:max-w-67 object-contain rounded-md " />
            <span className="text-2xl font-bold text-primary-700 dark:text-primary-600">–Ω–∞–∑–∞–¥</span>
          </button>
          <h1 className="text-3xl font-bold text-center text-text-primary dark:text-dark-text-primary">{COMPANY_META.name}</h1>
        </div>

        {submitError && (
          <div className="mb-6 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg">
            <p className="text-red-600 dark:text-red-400">{submitError}</p>
          </div>
        )}

        <form onSubmit={handleSubmit(onSubmit)} className="space-y-6">
          <div className="bg-surface-elevated dark:bg-dark-surface-elevated border border-border dark:border-dark-border rounded-lg p-6">
            <h3 className="text-lg font-semibold text-text-primary dark:text-dark-text-primary mb-4">–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">–ò–º—è *</label>
                <input
                  type="text"
                  {...register('firstName', { required: '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' })}
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è"
                  defaultValue={user?.first_name || ''}
                />
                {errors.firstName && (<p className="text-red-500 text-sm mt-1">{errors.firstName.message}</p>)}
              </div>
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">–§–∞–º–∏–ª–∏—è *</label>
                <input
                  type="text"
                  {...register('lastName', { required: '–§–∞–º–∏–ª–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞' })}
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é"
                  defaultValue={user?.last_name || ''}
                />
                {errors.lastName && (<p className="text-red-500 text-sm mt-1">{errors.lastName.message}</p>)}
              </div>
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">–¢–µ–ª–µ—Ñ–æ–Ω *</label>
                <input
                  type="tel"
                  {...register('phone', { required: '–¢–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω', pattern: { value: /^\+?[0-9\s\-()]+$/, message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞' } })}
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  placeholder="+7 (999) 123-45-67"
                />
                {errors.phone && (<p className="text-red-500 text-sm mt-1">{errors.phone.message}</p>)}
              </div>
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">Email</label>
                <input
                  type="email"
                  {...register('email', { pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i, message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email' } })}
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  placeholder="example@email.com"
                />
                {errors.email && (<p className="text-red-500 text-sm mt-1">{errors.email.message}</p>)}
              </div>
            </div>
          </div>

          <div className="bg-surface-elevated dark:bg-dark-surface-elevated border border-border dark:border-dark-border rounded-lg p-6">
            <h3 className="text-lg font-semibold text-text-primary dark:text-dark-text-primary mb-4">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏–∑–∏–Ω–≥–µ</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">–¢–∏–ø –ª–∏–∑–∏–Ω–≥–∞ *</label>
                <select
                  {...register('leasingType', { required: '–¢–∏–ø –ª–∏–∑–∏–Ω–≥–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' })}
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ª–∏–∑–∏–Ω–≥–∞</option>
                  <option value="operational">–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ª–∏–∑–∏–Ω–≥</option>
                  <option value="financial">–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ª–∏–∑–∏–Ω–≥</option>
                  <option value="return">–í–æ–∑–≤—Ä–∞—Ç–Ω—ã–π –ª–∏–∑–∏–Ω–≥</option>
                </select>
                {errors.leasingType && (<p className="text-red-500 text-sm mt-1">{errors.leasingType.message}</p>)}
              </div>
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">–°—Ç–æ–∏–º–æ—Å—Ç—å –∏–º—É—â–µ—Å—Ç–≤–∞ (‚ÇΩ) *</label>
                <input
                  type="number"
                  {...register('propertyValue', { required: '–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞', min: { value: 100000, message: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å 100,000 ‚ÇΩ' }, max: { value: 50000000, message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å 50,000,000 ‚ÇΩ' } })}
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  placeholder="2000000"
                />
                {errors.propertyValue && (<p className="text-red-500 text-sm mt-1">{errors.propertyValue.message}</p>)}
              </div>
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">–°—Ä–æ–∫ –ª–∏–∑–∏–Ω–≥–∞ (–º–µ—Å—è—Ü–µ–≤) *</label>
                <select
                  {...register('term', { required: '–°—Ä–æ–∫ –ª–∏–∑–∏–Ω–≥–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' })}
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫</option>
                  <option value="12">12 –º–µ—Å—è—Ü–µ–≤</option>
                  <option value="24">24 –º–µ—Å—è—Ü–∞</option>
                  <option value="36">36 –º–µ—Å—è—Ü–µ–≤</option>
                  <option value="48">48 –º–µ—Å—è—Ü–µ–≤</option>
                  <option value="60">60 –º–µ—Å—è—Ü–µ–≤</option>
                </select>
                {errors.term && (<p className="text-red-500 text-sm mt-1">{errors.term.message}</p>)}
              </div>
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å (‚ÇΩ)</label>
                <input
                  type="number"
                  {...register('downPayment')}
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  placeholder="200000"
                />
              </div>
            </div>
          </div>

          <div className="bg-surface-elevated dark:bg-dark-surface-elevated border border-border dark:border-dark-border rounded-lg p-6">
            <h3 className="text-lg font-semibold text-text-primary dark:text-dark-text-primary mb-4">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</label>
                <input
                  type="text"
                  {...register('companyName')}
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  placeholder="–û–û–û –ö–æ–º–ø–∞–Ω–∏—è"
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">–ò–ù–ù</label>
                <input
                  type="text"
                  {...register('inn', { pattern: { value: /^\d{10,12}$/, message: '–ò–ù–ù –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä' } })}
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  placeholder="1234567890"
                />
                {errors.inn && (<p className="text-red-500 text-sm mt-1">{errors.inn.message}</p>)}
              </div>
            </div>
          </div>

          <div className="bg-surface-elevated dark:bg-dark-surface-elevated border border-border dark:border-dark-border rounded-lg p-6">
            <h3 className="text-lg font-semibold text-text-primary dark:text-dark-text-primary mb-4">–°–ø–∏—Å–æ–∫ –¢–°</h3>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">
                  1. –ê–Ω–∫–µ—Ç–∞; –ö–∞—Ä—Ç–æ—á–∫–∞ (—Ä–µ–∫–≤–∏–∑–∏—Ç—ã) –∫–æ–º–ø–∞–Ω–∏–∏
                </label>
                <input
                  type="file"
                  accept=".pdf,.jpg,.jpeg,.png"
                  multiple
                  onChange={(e) => handleFileChange(e, 'anketa')}
                  data-field-name="anketa"
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                />
                <p className="text-xs text-text-secondary dark:text-dark-text-secondary mt-1">–°–∫–∞–Ω –∫–æ–ø–∏—è</p>
              </div>
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">
                  2. –ö–æ–ø–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –£—á—Ä–µ–¥–∏—Ç–µ–ª–µ–π (—Å—Ç—Ä–∞–Ω–∏—Ü—ã 2,3,5,6,14,19)
                </label>
                <input
                  type="file"
                  accept=".pdf,.jpg,.jpeg,.png"
                  multiple
                  onChange={(e) => handleFileChange(e, 'passport')}
                  data-field-name="passport"
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                />
                <p className="text-xs text-text-secondary dark:text-dark-text-secondary mt-1">–°–∫–∞–Ω –∫–æ–ø–∏—è</p>
              </div>
            </div>
          </div>

          <div className="bg-surface-elevated dark:bg-dark-surface-elevated border border-border dark:border-dark-border rounded-lg p-6">
            <h3 className="text-lg font-semibold text-text-primary dark:text-dark-text-primary mb-4">–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã</h3>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">
                  3. –ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å (—Ñ–æ—Ä–º–∞ ‚Ññ1 –∏ —Ñ–æ—Ä–º–∞ ‚Ññ2)
                </label>
                <p className="text-xs text-text-secondary dark:text-dark-text-secondary mb-2">
                  –ó–∞ 2024 –≥., –∑–∞ 1 –∫–≤. 2025 –≥., –∑–∞ 2 –∫–≤. 2024–≥. –∏ –∑–∞ 3 –∫–≤. 2024 –≥.
                </p>
                <input
                  type="file"
                  accept=".pdf,.jpg,.jpeg,.png"
                  multiple
                  onChange={(e) => handleFileChange(e, 'accounting')}
                  data-field-name="accounting"
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                />
                <p className="text-xs text-text-secondary dark:text-dark-text-secondary mt-1">–°–∫–∞–Ω –∫–æ–ø–∏—è</p>
              </div>
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">
                  4. –ö–∞—Ä—Ç–æ—á–∫–∞ —Å—á–µ—Ç–∞ 51 (—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –ø–æ —Å—É–±—Å—á–µ—Ç–∞–º –∏ –±–∞–Ω–∫–∞–º) –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∏ –º–µ—Å—è—Ü–∞
                </label>
                <input
                  type="file"
                  accept=".xlsx,.xls"
                  onChange={(e) => handleFileChange(e, 'account51')}
                  data-field-name="account51"
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                />
                <p className="text-xs text-text-secondary dark:text-dark-text-secondary mt-1">–í —Ñ–æ—Ä–º–∞—Ç–µ Excel</p>
              </div>
              <div>
                <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">
                  5. –°–ø—Ä–∞–≤–∫–∏ –∏–∑ –æ–±—Å–ª—É–∂–∏–≤–∞—é—â–∏—Ö –±–∞–Ω–∫–æ–≤ –æ–± –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö –æ–±–æ—Ä–æ—Ç–∞—Ö –ø–æ –†/–° –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤
                </label>
                <p className="text-xs text-text-secondary dark:text-dark-text-secondary mb-2">
                  –û –Ω–∞–ª–∏—á–∏–∏/–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å—Å—É–¥–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–ª–∏—á–∏–∏/–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∫–∞—Ä—Ç–æ—Ç–µ–∫–∏ ‚Ññ2
                </p>
                <input
                  type="file"
                  accept=".pdf,.jpg,.jpeg,.png"
                  multiple
                  onChange={(e) => handleFileChange(e, 'bankStatements')}
                  data-field-name="bankStatements"
                  className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                />
                <p className="text-xs text-text-secondary dark:text-dark-text-secondary mt-1">–°–∫–∞–Ω –∫–æ–ø–∏—è</p>
              </div>
            </div>
          </div>

          <div className="bg-surface-elevated dark:bg-dark-surface-elevated border border-border dark:border-dark-border rounded-lg p-6">
            <h3 className="text-lg font-semibold text-text-primary dark:text-dark-text-primary mb-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            <div>
              <label className="block text-sm font-medium text-text-primary dark:text-dark-text-primary mb-2">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
              <textarea
                {...register('comment')}
                rows="4"
                className="w-full px-3 py-2 border border-border dark:border-dark-border rounded-md bg-surface-secondary dark:bg-dark-surface-secondary text-text-primary dark:text-dark-text-primary focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π –∑–∞—è–≤–∫–µ –Ω–∞ –ª–∏–∑–∏–Ω–≥..."
              />
            </div>
          </div>

          <div className="flex items-center justify-center">
            <button
              type="submit"
              disabled={isSubmitting}
              className="bg-button-primary hover:bg-primary-700 disabled:bg-gray-400 text-white font-semibold py-3 px-8 rounded-lg transition-colors duration-200"
            >
              {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : `–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –≤ ${COMPANY_META.name}`}
            </button>
          </div>
        </form>
        {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
        <DesktopContactBar
          telegramUrl={COMPANY_META.telegramUrl}
          whatsAppUrl={COMPANY_META.whatsAppUrl}
          phone={COMPANY_META.phone}
          className="mt-6"
        />
      </div>
    </div>
  );
};

export { DirectLeasingPage };
