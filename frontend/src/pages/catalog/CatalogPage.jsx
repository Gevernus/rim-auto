import { useState, useEffect } from 'react';
import { CarGrid } from '../../widgets/car-grid';
import { useCars, useSystemHealth } from '../../shared/hooks/useCars';
import { useAppNavigation, routes } from '../../shared/lib/navigation';
import { VehicleFilters } from '../../features/car-catalog';
import { CitySelector, DeliveryInfo } from '../../features/delivery';
import { imagesApi, debugApi } from '../../shared/api/client.js';

const CatalogPage = () => {
  const { vehicles, loading, error, pagination, filterCars, refreshCache } = useCars();
  const { health } = useSystemHealth();
  const [favoriteVehicleIds, setFavoriteVehicleIds] = useState([]);
  const [selectedDeliveryCity, setSelectedDeliveryCity] = useState(null);
  const [imageStats, setImageStats] = useState(null);
  const [loadingImageStats, setLoadingImageStats] = useState(false);
  const [showDevPanel, setShowDevPanel] = useState(false);
  const [debugInfo, setDebugInfo] = useState(null);
  const { navigateTo } = useAppNavigation();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const loadImageStats = async () => {
    try {
      setLoadingImageStats(true);
      const response = await imagesApi.getStats();
      setImageStats(response.data);
    } catch (err) {
      console.error('Error loading image stats:', err);
    } finally {
      setLoadingImageStats(false);
    }
  };

  // –û—á–∏—Å—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const handleCleanupImages = async () => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è?')) return;
    
    try {
      const response = await imagesApi.cleanup();
      alert(response.data.message);
      loadImageStats(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: ' + err.message);
    }
  };

  // –û—Ç–ª–∞–¥–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞
  const handleTestSelectors = async () => {
    try {
      const response = await debugApi.testSelectors();
      setDebugInfo(response.data);
      console.log('Selector test results:', response.data);
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤: ' + err.message);
    }
  };

  const handleViewPageSource = async () => {
    try {
      const response = await debugApi.getPageSource();
      if (response.data.status === 'ok') {
        const newWindow = window.open('', '_blank');
        newWindow.document.write(`
          <html>
            <head><title>Page Source Debug</title></head>
            <body>
              <h2>HTML Source (${response.data.full_length} chars total, showing first 50KB)</h2>
              <pre style="white-space: pre-wrap; font-family: monospace; font-size: 12px;">${response.data.content}</pre>
            </body>
          </html>
        `);
      } else {
        alert(response.data.message);
      }
    } catch (err) {
      alert('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è HTML: ' + err.message);
    }
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ —Å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  const handleRefreshCache = () => {
    refreshCache();
    setTimeout(loadImageStats, 3000); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞
  };

  useEffect(() => {
    loadImageStats();
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleFiltersChange = (filters) => {
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º frontend —Ñ–∏–ª—å—Ç—Ä—ã –≤ backend –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    const backendFilters = {
      page: 1, // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
      page_size: 12
    };

    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–¥–∞–Ω—ã
    if (filters.brand) {
      backendFilters.title = filters.brand;
    }
    
    if (filters.priceRange?.from) {
      backendFilters.price_from = filters.priceRange.from / 10000; // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ ‰∏á
    }
    
    if (filters.priceRange?.to) {
      backendFilters.price_to = filters.priceRange.to / 10000; // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ ‰∏á
    }

    filterCars(backendFilters);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å
  const handleVehicleClick = (vehicleId) => {
    navigateTo(routes.car.path.replace(':id', vehicleId));
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const handleFavoriteToggle = (vehicleId) => {
    setFavoriteVehicleIds(prev => {
      if (prev.includes(vehicleId)) {
        return prev.filter(id => id !== vehicleId);
      } else {
        return [...prev, vehicleId];
      }
    });
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
  const handleDeliveryCitySelect = (city) => {
    setSelectedDeliveryCity(city);
  };

  if (error) {
    return (
      <div className="min-h-screen bg-surface dark:bg-dark-surface flex items-center justify-center">
        <div className="text-center">
          <h2 className="text-2xl font-bold text-text-primary dark:text-dark-text-primary mb-4">
            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
          </h2>
          <p className="text-text-secondary dark:text-dark-text-secondary mb-4">
            {error}
          </p>
          <button 
            onClick={() => window.location.reload()} 
            className="px-6 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg transition-colors"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-surface dark:bg-dark-surface transition-colors">
      <div className="container section-padding">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ */}
        <div className="mb-8">
          <div className="flex flex-col lg:flex-row lg:justify-between lg:items-start gap-6">
            <div>
              <h1 className="text-3xl font-bold text-text-primary dark:text-dark-text-primary mb-4">
                –ö–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏–∑ –ö–∏—Ç–∞—è
              </h1>
              <p className="text-text-secondary dark:text-dark-text-secondary">
                –ù–∞–π–¥–µ–Ω–æ {pagination.total} –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
              </p>
            </div>
            
            {/* –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ */}
            <div className="lg:w-96">
              <CitySelector 
                onCitySelect={handleDeliveryCitySelect}
                selectedCity={selectedDeliveryCity}
              />
            </div>
          </div>

          {/* –ü–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ */}
          <div className="mt-6">
            <button
              onClick={() => setShowDevPanel(!showDevPanel)}
              className="text-xs text-text-secondary dark:text-dark-text-secondary hover:text-primary-600 transition-colors"
            >
              {showDevPanel ? 'üîΩ –°–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞' : 'üîß –ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞'}
            </button>
            
            {showDevPanel && (
              <div className="mt-4 space-y-4">
                {/* –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã */}
                {health && (
                  <div className="p-4 bg-green-50 dark:bg-green-900 rounded-lg">
                    <h3 className="font-semibold text-green-800 dark:text-green-200 mb-2">–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:</h3>
                    <div className="text-sm text-green-700 dark:text-green-300">
                      <p>MongoDB: {health.services?.mongodb || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
                      <p>Selenium: {health.services?.selenium || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
                    </div>
                  </div>
                )}

                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
                {imageStats && (
                  <div className="p-4 bg-blue-50 dark:bg-blue-900 rounded-lg">
                    <div className="flex justify-between items-start">
                      <div>
                        <h3 className="font-semibold text-blue-800 dark:text-blue-200 mb-2">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:</h3>
                        <div className="text-sm text-blue-700 dark:text-blue-300">
                          <p>–í—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {imageStats.total_images}</p>
                          <p>–†–∞–∑–º–µ—Ä: {imageStats.total_size_mb} MB</p>
                          <p>–°—Ç–∞—Ç—É—Å: {imageStats.status}</p>
                        </div>
                      </div>
                      <div className="flex gap-2">
                        <button
                          onClick={loadImageStats}
                          disabled={loadingImageStats}
                          className="px-3 py-1 text-xs bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors disabled:opacity-50"
                        >
                          {loadingImageStats ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–û–±–Ω–æ–≤–∏—Ç—å'}
                        </button>
                        <button
                          onClick={handleCleanupImages}
                          className="px-3 py-1 text-xs bg-red-600 hover:bg-red-700 text-white rounded transition-colors"
                        >
                          –û—á–∏—Å—Ç–∏—Ç—å
                        </button>
                      </div>
                    </div>
                  </div>
                )}

                {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—ç—à–µ–º */}
                <div className="p-4 bg-yellow-50 dark:bg-yellow-900 rounded-lg">
                  <div className="flex justify-between items-center">
                    <div>
                      <h3 className="font-semibold text-yellow-800 dark:text-yellow-200">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏:</h3>
                      <p className="text-sm text-yellow-700 dark:text-yellow-300 mt-1">
                        –ü–µ—Ä–µ–ø–∞—Ä—Å–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏ —Å–∫–∞—á–∞—Ç—å –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                      </p>
                    </div>
                    <button
                      onClick={handleRefreshCache}
                      disabled={loading}
                      className="px-4 py-2 bg-yellow-600 hover:bg-yellow-700 text-white rounded transition-colors disabled:opacity-50"
                    >
                      {loading ? '–ü–∞—Ä—Å–∏–Ω–≥...' : '–û–±–Ω–æ–≤–∏—Ç—å –∫—ç—à'}
                    </button>
                  </div>
                </div>

                {/* –û—Ç–ª–∞–¥–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ */}
                <div className="p-4 bg-purple-50 dark:bg-purple-900 rounded-lg">
                  <div className="flex justify-between items-start">
                    <div>
                      <h3 className="font-semibold text-purple-800 dark:text-purple-200 mb-2">–û—Ç–ª–∞–¥–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:</h3>
                      <p className="text-sm text-purple-700 dark:text-purple-300 mb-3">
                        –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º che168.com
                      </p>
                    </div>
                    <div className="flex gap-2">
                      <button
                        onClick={handleTestSelectors}
                        className="px-3 py-1 text-xs bg-purple-600 hover:bg-purple-700 text-white rounded transition-colors"
                      >
                        –¢–µ—Å—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
                      </button>
                      <button
                        onClick={handleViewPageSource}
                        className="px-3 py-1 text-xs bg-purple-600 hover:bg-purple-700 text-white rounded transition-colors"
                      >
                        –ü—Ä–æ—Å–º–æ—Ç—Ä HTML
                      </button>
                    </div>
                  </div>
                  
                  {debugInfo && (
                    <div className="mt-4 p-3 bg-purple-100 dark:bg-purple-800 rounded">
                      <h4 className="font-medium text-purple-800 dark:text-purple-200 mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h4>
                      <div className="text-sm text-purple-700 dark:text-purple-300">
                        <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {debugInfo.status}</p>
                        {debugInfo.selector_results && (
                          <div className="mt-2">
                            <p><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤:</strong></p>
                            <div className="max-h-40 overflow-y-auto">
                              {Object.entries(debugInfo.selector_results).map(([selector, result]) => (
                                <div key={selector} className="mt-1">
                                  <code className="text-xs bg-purple-200 dark:bg-purple-700 px-1 rounded">
                                    {selector}
                                  </code>
                                  : {result.count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                                </div>
                              ))}
                            </div>
                          </div>
                        )}
                        {debugInfo.interesting_classes && debugInfo.interesting_classes.length > 0 && (
                          <div className="mt-2">
                            <p><strong>–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∫–ª–∞—Å—Å—ã:</strong></p>
                            <div className="text-xs">
                              {debugInfo.interesting_classes.slice(0, 10).join(', ')}
                              {debugInfo.interesting_classes.length > 10 && '...'}
                            </div>
                          </div>
                        )}
                      </div>
                    </div>
                  )}
                </div>
              </div>
            )}
          </div>
        </div>

        {/* –§–∏–ª—å—Ç—Ä—ã –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ */}
        <div className="mb-6 flex flex-col lg:flex-row gap-4">
          <VehicleFilters className="flex-2/3"
            onFiltersChange={handleFiltersChange}
            loading={loading}
			/>
			{/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ */}
			{selectedDeliveryCity && (
			  <div className="flex-1/3">
				<DeliveryInfo city={selectedDeliveryCity} />
			  </div>
			)}
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ */}
        <div className="mb-8">
          <CarGrid
            vehicles={vehicles}
            loading={loading}
            favoriteVehicleIds={favoriteVehicleIds}
            onVehicleClick={handleVehicleClick}
            onFavoriteToggle={handleFavoriteToggle}
            selectedDeliveryCity={selectedDeliveryCity}
          />
        </div>

        {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è */}
        {pagination.total > pagination.page_size && (
          <div className="flex justify-center">
            <div className="flex items-center gap-2">
              <span className="text-text-secondary dark:text-dark-text-secondary">
                –°—Ç—Ä–∞–Ω–∏—Ü–∞ {pagination.page} –∏–∑ {Math.ceil(pagination.total / pagination.page_size)}
              </span>
              {/* TODO: –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∫–æ–≥–¥–∞ backend –ø–æ–¥–¥–µ—Ä–∂–∏—Ç –∏—Ö */}
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default CatalogPage; 